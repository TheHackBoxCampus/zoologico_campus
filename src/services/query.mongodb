// * Funcion para los ids Autoincrementables

function aumentarId (categoria, id){
    use("zoologico_campus");
    let data = db[categoria].find().sort({[id]: -1}).toArray();
    if(data.length < 1) return 1; 
    
    let lastNumber = data[0][id];
    return lastNumber + 1;
}
// !
// * Creacion de la coleccion especie
use("zoologico_campus");
db.createCollection('especie', {
    validator: {
        $jsonSchema: {
            title: "coleccion para especie",
            bsonType: "object",
            required: ["id_especie", "nombre_especie", "descripcion_especie", "clasificacion",],
            properties: {
                id_especie: {
                    bsonType: "int"
                },
                nombre_especie: {
                    bsonType: "string",
                    pattern: "^[a-zA-Z]+$"
                },
                descripcion_especie: {
                    bsonType: "string",
                },
                clasificacion: {
                    bsonType: "string",
                },
            }
        }
    }
})
// ^ Establecimiento de los campos unicos
use("zoologico_campus");
db.especie.createIndex(
    { id_especie: 1, nombre_especie: 1 },
    { unique: true }
);
// ? Insercion de data
use("zoologico_campus");
db.especie.insertOne({
    id_especie: 2,
    nombre_especie: "leon",
    descripcion_especie: "la mejor especie de la tierra",
    clasificacion: "terrestre"
});

// !
// * creacion de la coleccion subespecie
use("zoologico_campus");
db.createCollection('subespecie', {
    validator: {
        $jsonSchema: {
            title: "coleccion para especie",
            bsonType: "object",
            required: ["id_subespecie", "id_especie", "nombre_subespecie", "descripcion","cantidad"],
            properties: {
                id_subespecie: {
                    bsonType: "int"
                },
                id_especie: {
                    bsonType: "int",
                },
                nombre_subespecie: {
                    bsonType: "string",
                    pattern: "^[a-zA-Z ]+$"
                },
                descripcion: {
                    bsonType: "string",
                },
                cantidad:{
                    bsonType:"int"
                }
            }
        }
    }
})
// ^ Establecimiento de los campos unicos
use("zoologico_campus");
db.subespecie.createIndex(
    { id_subespecie: 1 },
    { unique: true }
);
db.subespecie.createIndex(
    { nombre_subespecie: 1},
    { unique: true }
);
// ? Insercion de data
use("zoologico_campus");

function aumentarId (categoria, id){
    use("zoologico_campus");
    let data = db[categoria].find().sort({[id]: -1}).toArray();
    if(data.length < 1) return 1; 
    
    let lastNumber = data[0][id];
    return lastNumber + 1;
}
db.subespecie.insertOne(
    {
    id_subespecie: aumentarId("subespecie", "id_subespecie"),
    id_especie: 2,
    nombre_subespecie: "Leon americano",
    descripcion: "leon de america",
    cantidad: 10,
});
db.subespecie.insertOne(
    {
        id_subespecie: aumentarId("subespecie", "id_subespecie"),
        id_especie: 2,
        nombre_subespecie: "Leon azul",
        descripcion: "leon de america",
        cantidad: 2,
    }
);
db.subespecie.insertOne(
    {
        id_subespecie: aumentarId("subespecie", "id_subespecie"),
        id_especie: 2,
        nombre_subespecie: "Leon rojo",
        descripcion: "leon de america",
        cantidad: 3,
    }
);
db.subespecie.insertOne(
    {
        id_subespecie: aumentarId("subespecie", "id_subespecie"),
        id_especie: 2,
        nombre_subespecie: "Leon amarillo",
        descripcion: "leon de america",
        cantidad: 6,
    }
);

// !
// * creacion de la coleccion animal
use("zoologico_campus");
db.createCollection('animal', {
    validator: {
        $jsonSchema: {
            title: "coleccion para especie",
            bsonType: "object",
            required: ["id_animal", "id_subespecie", "id_recinto", "nombre","fecha_nacimiento","genero","pais_origen","descripcion","url_imagen","entorno"],
            properties: {
                id_animal: {
                    bsonType: "int"
                },
                id_subespecie: {
                    bsonType: "int",
                },
                id_recinto: {
                    bsonType: "int",
                },
                nombre: {
                    bsonType: "string",
                    pattern: "^[a-zA-Z0-9 ]+$"
                },
                fecha_nacimiento:{
                    bsonType:"date"
                },
                genero:{
                    bsonType:"string",
                    enum:["Hembra","Macho"]
                },
                pais_origen:{
                    bsonType:"string"
                },
                descripcion:{
                    bsonType:"string"
                },
                url_imagen:{
                    bsonType:"string"
                },
                entorno:{
                    bsonType:"string"
                }
            }
        }
    }
})
// ^ Establecimiento de los campos unicos
use("zoologico_campus");
db.animal.createIndex(
    { id_animal: 1 },
    { unique: true }
);
db.animal.createIndex(
    { nombre: 1},
    { unique: true }
);
// ? Insercion de data
use("zoologico_campus");
db.animal.insertOne({
    id_animal: aumentarId("animal", "id_animal"),
    id_subespecie: 2,
    id_recinto: 1,
    nombre: "Mini selva",
    fecha_nacimiento: new Date("2000-12-1"),
    genero:"Hembra",
    pais_origen:"Brazil",
    descripcion:"Es una mini selva",
    url_imagen:"https://thumbs.dreamstime.com/z/mini-selva-en-un-d%C3%ADa-verde-92532232.jpg",
    entorno:"Silvestre",
});
db.animal.insertOne({
    id_animal: aumentarId("animal", "id_animal"),
    id_subespecie: 1,
    id_recinto: 2,
    nombre: "estanque",
    fecha_nacimiento: new Date("2000-12-1"),
    genero:"Hembra",
    pais_origen:"Brazil",
    descripcion:"Es una mini selva",
    url_imagen:"https://thumbs.dreamstime.com/z/mini-selva-en-un-d%C3%ADa-verde-92532232.jpg",
    entorno:"Silvestre",
});
db.animal.insertOne({
    id_animal: aumentarId("animal", "id_animal"),
    id_subespecie: 2,
    id_recinto: 1,
    nombre: "Mini estanque",
    fecha_nacimiento: new Date("2000-12-1"),
    genero:"Macho",
    pais_origen:"Canada",
    descripcion:"Es un mini estanque",
    url_imagen:"https://thumbs.dreamstime.com/z/mini-selva-en-un-d%C3%ADa-verde-92532232.jpg",
    entorno:"Silvestre",
});
db.animal.insertOne({
    id_animal: aumentarId("animal", "id_animal"),
    id_subespecie: 2,
    id_recinto: 1,
    nombre: "Mini selva 22",
    fecha_nacimiento: new Date("2000-12-1"),
    genero:"Hembra",
    pais_origen:"Brazil",
    descripcion:"Es una mini selva",
    url_imagen:"https://thumbs.dreamstime.com/z/mini-selva-en-un-d%C3%ADa-verde-92532232.jpg",
    entorno:"Silvestre",
});

// !
// * creacion de la coleccion alimentacion
use("zoologico_campus");
db.createCollection('alimentacion', {
    validator: {
        $jsonSchema: {
            title: "coleccion para especie",
            bsonType: "object",
            required: ["id_alimentacion", "id_animal", "tipo_alimento", "hora_alimentacion","cantidad"],
            properties: {
                id_alimentacion: {
                    bsonType: "int"
                },
                id_animal: {
                    bsonType: "int",
                },
                tipo_alimento: {
                    bsonType: "string",
                },
                hora_alimentacion: {
                    bsonType: "string",
                },
                cantidad:{
                    bsonType:"int"
                }
            }
        }
    }
})
// ^ Establecimiento de los campos unicos
use("zoologico_campus");
db.alimentacion.createIndex(
    { id_alimentacion: 1 },
    { unique: true }
);
// ? Insercion de data
use("zoologico_campus");
db.alimentacion.insertOne({
    id_alimentacion: aumentarId("alimentacion", "id_alimentacion"),
    id_animal: 1,
    tipo_alimento: "CarnÃ­voro",
    hora_alimentacion: "08:30 am",
    cantidad: 3
});
use("zoologico_campus");
db.alimentacion.insertOne({
    id_alimentacion: aumentarId("alimentacion", "id_alimentacion"),
    id_animal: 2,
    tipo_alimento: "Carne",
    hora_alimentacion: "08:30 am",
    cantidad: 3
});



// !
// * creacion de la coleccion cuidado
use("zoologico_campus");
db.createCollection('cuidado', {
    validator: {
        $jsonSchema: {
            title: "coleccion para especie",
            bsonType: "object",
            required: ["id_cuidado", "id_animal", "fecha_cuidado", "tipo_de_cuidado","id_veterinario","descripcion_cuidado","medicamento_utilizado", "resultado"],
            properties: {
                id_cuidado: {
                    bsonType: "int"
                },
                id_animal: {
                    bsonType: "int",
                },
                fecha_cuidado: {
                    bsonType: "date",
                },
                tipo_de_cuidado: {
                    bsonType: "string",
                },
                id_veterinario:{
                    bsonType:"int"
                },
                descripcion_cuidado:{
                    bsonType:"string"
                },
                medicamento_utilizado:{
                    bsonType:"string"
                },
                resultado:{
                    bsonType:"string"
                }
            }
        }
    }
})
// ^ Establecimiento de los campos unicos
use("zoologico_campus");
db.cuidado.createIndex(
    { id_cuidado: 1 },
    { unique: true }
);
// ? Insercion de data
use("zoologico_campus");
db.cuidado.insertOne({
    id_cuidado: aumentarId("cuidado", "id_cuidado"),
    id_animal: 1,
    id_veterinario: 3,
    fecha_cuidado: new Date(),
    tipo_de_cuidado: "ALTO",
    descripcion_cuidado:"descriocion cuidado",
    medicamento_utilizado:"asethaminophen",
    resultado:"no sirve"
});

// !
// * creacion de la coleccion veterinario
use("zoologico_campus");
db.createCollection('veterinario', {
    validator: {
        $jsonSchema: {
            title: "coleccion para especie",
            bsonType: "object",
            required: ["id_veterinario", "nombre", "apellido", "fecha_nacimiento","genero","especialidad",
            "titulo", "experiencia_laboral","telefono","direccion","salario","fecha_contratacion"],
            properties: {
                id_veterinario: {
                    bsonType: "int"
                },
                nombre: {
                    bsonType: "string",
                },
                apellido: {
                    bsonType: "string",
                },
                fecha_nacimiento: {
                    bsonType: "date",
                },
                genero:{
                    bsonType:"string",
                    enum:["Masculino","Femenino"]
                },
                especialidad:{
                    bsonType:"string"
                },
                titulo:{
                    bsonType:"string"
                },
                experiencia_laboral:{
                    bsonType:"string"
                },
                telefono:{
                    bsonType:"string"
                },
                direccion:{
                    bsonType:"string"
                },
                salario:{
                    bsonType:"double"
                },
                fecha_contratacion:{
                    bsonType:"date"
                }
            }
        }
    }
})
// ^ Establecimiento de los campos unicos
use("zoologico_campus");
db.veterinario.createIndex(
    { id_veterinario: 1 },
    { unique: true }
);
db.veterinario.createIndex(
    { nombre: 1, apellido:1 },
    { unique: true }
);
// ? Insercion de data
use("zoologico_campus");
db.veterinario.insertOne({
    id_veterinario: aumentarId("veterinario", "id_veterinario"),
    nombre: "MarÃ­a_2",
    apellido: "GÃ³mez_2",
    fecha_nacimiento: new Date("1985-08-25"),
    genero: "Femenino",
    especialidad: "Animales domÃ©sticos",
    titulo: "MÃ©dica Veterinaria",
    experiencia_laboral: "8 aÃ±os",
    telefono: "987654321",
    direccion: "Avenida ABC, Ciudad",
    salario: 5500.1,
    fecha_contratacion: new Date("2020-11-15")
});

function aumentarId (categoria, id){
    use("zoologico_campus");
    let data = db[categoria].find().sort({[id]: -1}).toArray();
    if(data.length < 1) return 1; 
    
    let lastNumber = data[0][id];
    return lastNumber + 1;
}

// ? Insercion de data
use("zoologico_campus");
db.visitante.insertOne({
    id_visitante: aumentarId("visitante", "id_visitante"),
    id_recinto: 1,
    id_rol:2,
    nombre: "Luisa",
    apellido: "MartÃ­nez",
    fecha_nacimiento: new Date("1995-08-20"),
    genero: "Femenino",
    pais_origen: "MÃ©xico",
    fecha_visita: new Date("2023-08-28"),
    ticket_entrada: "123456789",
    comentarios: "Gran experiencia, me encantaron los leones."
});




// !
// * creacion de la coleccion roles
use("zoologico_campus");
db.createCollection('rol', {
    validator: {
        $jsonSchema: {
            title: "coleccion para roles",
            bsonType: "object",
            required: ["id_rol", "nombre_rol", "permisos"],
            properties: {
                id_rol: {
                    bsonType: "int"
                },
                nombre_rol: {
                    bsonType: "string",
                    enum:["cliente","empleado"]
                },
                permisos: {
                    bsonType: "array",
                    items: {
                        bsonType: "string",
                        enum: ["get", "put", "post", "delete"]
                    }
                }
            }
        }
    }
})
// ^ Establecimiento de los campos unicos
use("zoologico_campus");
db.rol.createIndex(
    { id_rol: 1 },
    { unique: true }
);
// ? Insercion de data
function aumentarId (categoria, id){
    use("zoologico_campus");
    let data = db[categoria].find().sort({[id]: -1}).toArray();
    if(data.length < 1) return 1; 
    
    let lastNumber = data[0][id];
    return lastNumber + 1;
}
use("zoologico_campus");
db.rol.insertOne({
    id_rol: aumentarId("rol", "id_rol"),
    nombre_rol: "cliente",
    permisos: ["get"],
});

use("zoologico_campus");
db.rol.insertOne({
    id_rol: aumentarId("rol", "id_rol"),
    nombre_rol: "empleado",
    permisos: ["get","put","post"],
});



// !
// * creacion de la coleccion empleado
use("zoologico_campus");
db.createCollection('usuario', {
    validator: {
        $jsonSchema: {
            title: "coleccion para usuario",
            bsonType: "object",
            required: ["id_usuario", "id_recinto","id_rol" ,"nombre", "apellido","email","genero",
            "telefono"],
            properties: {
                id_usuario: {
                    bsonType: "int"
                },
                id_recinto: {
                    bsonType: "int",
                },
                id_rol: {
                    bsonType: "int"
                },
                nombre: {
                    bsonType: "string",
                },
                apellido: {
                    bsonType: "string",
                },
                email:{
                    bsonType:"string",
                },
                genero:{
                    bsonType:"string",
                    enum:["Masculino","Femenino"]
                },
                telefono:{
                    bsonType:"string"
                }
            }
        }
    }
})
// ^ Establecimiento de los campos unicos
use("zoologico_campus");
db.usuario.createIndex(
    { id_usuario: 1 },
    { unique: true }
);


function aumentarId (categoria, id){
    use("zoologico_campus");
    let data = db[categoria].find().sort({[id]: -1}).toArray();
    if(data.length < 1) return 1; 
    
    let lastNumber = data[0][id];
    return lastNumber + 1;
}
// ? Insercion de data
use("zoologico_campus");
db.usuario.insertOne({
    id_usuario: aumentarId("usuario", "id_usuario"),
    id_recinto: 1,
    id_rol:1,
    nombre: "Ana",
    apellido: "Cabello",
    email: "ana@example.com",
    genero: "Femenino",
    telefono: "1231231"
});
use("zoologico_campus");
db.usuario.insertOne({
    id_usuario: aumentarId("usuario", "id_usuario"),
    id_recinto: 1,
    id_rol:2,
    nombre: "Miller",
    apellido: "Cabello",
    email: "ana@example.com",
    genero: "Masculino",
    telefono: "1231231"
});
